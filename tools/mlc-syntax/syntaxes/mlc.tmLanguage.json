{
  "scopeName": "source.mlc",
  "name": "MLC",
  "patterns": [
    { "include": "#comments" },
    { "include": "#heredoc" },
    { "include": "#regex" },
    { "include": "#keywords" },
    { "include": "#types" },
    { "include": "#numbers" },
    { "include": "#strings" },
    { "include": "#operators" },
    {
      "match": "\\b(true|false)\\b",
      "name": "constant.language.boolean.mlc"
    },
    {
      "match": "\\b[A-Za-z_][A-Za-z0-9_]*\\b",
      "name": "identifier.mlc"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.mlc",
          "begin": "//",
          "beginCaptures": { "0": { "name": "punctuation.definition.comment.mlc" } },
          "end": "$\\n?",
          "patterns": []
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "match": "\\b(fn|type|let|mut|return|if|then|else|while|for|in|do|end|match|module|import|export|enum|from|as|where|case|of|break|continue|extern)\\b",
          "name": "keyword.control.mlc"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "match": "\\b(i32|f32|bool|str|string|void|regex)\\b",
          "name": "storage.type.mlc"
        },
        {
          "match": "\\b[A-Z][A-Za-z0-9_]*\\b",
          "name": "entity.name.type.mlc"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "match": "\\b\\d+(_\\d+)*(\\.\\d+(_\\d+)*)?\\b",
          "name": "constant.numeric.mlc"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.mlc",
      "begin": "\"",
      "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.mlc" } },
      "end": "\"",
      "endCaptures": { "0": { "name": "punctuation.definition.string.end.mlc" } },
      "patterns": [
        {
          "name": "constant.character.escape.mlc",
          "match": "\\\\."
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "match": "(\\+|\\-|\\*|\\/|%|==|!=|<=|>=|<|>|&&|\\|\\||=|\\.|:|\\|>)",
          "name": "keyword.operator.mlc"
        }
      ]
    },
    "heredoc": {
      "patterns": [
        {
          "name": "string.unquoted.heredoc.mlc",
          "begin": "<<~?[A-Z0-9_]+",
          "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.mlc" } },
          "end": "^[A-Z0-9_]+$",
          "endCaptures": { "0": { "name": "punctuation.definition.string.end.mlc" } }
        }
      ]
    },
    "regex": {
      "patterns": [
        {
          "name": "string.regexp.mlc",
          "begin": "/",
          "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.mlc" } },
          "end": "/[gimsuxy]*",
          "endCaptures": { "0": { "name": "punctuation.definition.string.end.mlc" } },
          "patterns": [
            {
              "name": "constant.character.escape.mlc",
              "match": "\\\\."
            }
          ]
        }
      ]
    }
  },
  "scopeNameAliases": [
    "source.aurlang"
  ],
  "fileTypes": [
    "aur"
  ],
  "uuid": "5c98d2f1-ff3f-4d9e-b1d2-aurora-syntax"
}

// Interactive graphics demo with event loop and mutable variables

import {
  create_window, create_draw_context, flush_window,
  poll_event, clear, set_color, draw_circle, draw_text,
  rgb, is_quit_event, sleep_ms
} from "Graphics"

fn main() -> i32 = do
  let win = create_window(600, 400, "Interactive Demo - Click to Move Circle");
  let ctx = create_draw_context(win);

  // Mutable state for circle position
  let mut x = 300.0;
  let mut y = 200.0;
  let mut running = true;
  let mut frame_count = 0;

  // Event loop
  while running do
    let evt = poll_event(win);

    // Check for quit event
    if is_quit_event(evt) then do
      running = false;
      0
    end else 0;

    // Update position from mouse events
    let evt_x = to_f32(evt.x);
    let evt_y = to_f32(evt.y);
    if evt_x > 0.0 then do
      x = evt_x;
      y = evt_y;
      0
    end else 0;

    // Clear and redraw
    clear(ctx, rgb(0.1, 0.1, 0.15));
    set_color(ctx, rgb(0.2, 0.8, 0.4));
    draw_circle(ctx, x, y, 30.0);

    set_color(ctx, rgb(1.0, 1.0, 1.0));
    draw_text(ctx, "Click to move circle - Press key to quit", 10.0, 30.0, 16.0);

    flush_window(win);
    sleep_ms(16);

    frame_count = frame_count + 1;
    0
  end;

  0
end
